#from #E:\svnsandbox\brms\eclipse\plugins\com.versata#.tl.studio\properties\jboss710


#frameworkFactoryClassName = com.versata.tl.vls.ejb.EJBFrameworkFactoryImpl
 frameworkFactoryClassName = CurrencyDemo.Kryptering.EJBFrameworkFactoryVSKImpl

plsFrameworkFactoryClassName = com.versata.tl.vfc.pls.ejb.PLSEJBFrameworkFactoryImpl
InitialContextFactory = org.jnp.interfaces.NamingContextFactory
nameService = org.jnp.interfaces.NamingContextFactory
ConfigFile = EJBAppServerConfig.txt
appserver_resource_classname = com.versata.tl.vls.resource.JBoss71ResourceAccessor
eventAdapterCustomClassLoader = false

#Set these properties for maintaining consistency of cached data when deploying versata applications in a clustered environment
#mbeanManagerClassName = com.versata.tl.vls.mbean.JbossMbeanManager
#cacheInvalidatorClassName = com.versata.tl.vls.cache.ClusterCacheInvalidator
#providerURLs = jnp://host1,jnp://host2

#Set this property if you want to save the AppServerConfig properties in the db instead of storing it as a file in VERSATA_HOME/VLSComponents directory. This is useful for cluster deployment of Versata application. Set this property to JNDI name of the datasource in which the AppServerConfig properties are deployed.
#AppServerConfigDataSource=versataDS
AppServerConfigDataSource=java:jboss/jdbc/versataDS

#Set this property if you want to specify the root directory for VLS Logs. This property should be set to a String JNDI binding which should be used to get the VLS logs root directory. Please refer to vslog4j.xml present in your repository for more details.
#VLSLogsRootJNDIName=VersataLogsRoot

#Set these properties to specify the Admin data source (JNDI) name when the Admin data is present in database.
#NOTE : For JBoss, Please use java: followed by the DataSource name.
AdminDataSourceName=java:jboss/jdbc/versataDS