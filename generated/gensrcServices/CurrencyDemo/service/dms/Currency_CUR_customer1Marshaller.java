	/*
	 * Copyright (c) Versata, Inc., 2000-2005. All Rights Reserved.
	 *
	 * THIS CODE IS AUTO-GENERATED FROM YOUR MODEL.
	 * PLEASE DO NOT EDIT IT, BECAUSE ANY CHANGES YOU MAKE WILL BE OVERWRITTEN.
	 */
	
	package CurrencyDemo.service.dms;

	import com.versata.tl.api.logging.VersataLogger;
	import com.versata.tl.common.exception.ServerException;
	import com.versata.tl.vls.core.DataRow;
	import com.versata.tl.vls.service.transfer.BusinessObjectMarshaller;
	import com.versata.tl.common.util.VSDate;
	import com.versata.tl.dataaccess.common.ChangeSetting;

	import commonj.sdo.DataObject;
	import commonj.sdo.ChangeSummary;
	import commonj.sdo.Property;

	import java.math.BigDecimal;
	import java.util.HashMap;
	import java.util.Iterator;
	import java.util.List;
	import java.util.Map;

//	 This is based on the current repository package naming
	import CurrencyDemo.Currency_CUR_customer1Impl;

//	 This is the class generated from the SDO 
	import CurrencyDemo.Currency_CUR_customer1;


//	import CurrencyDemo.service.dto.Currency_CUR_customer1DTO;
	
	

	
/**
	 * This code handles the actual mapping between Versata objects and generated transfer objects
	 * 
	 * @author AUTOGENERATED
	 */
	public class Currency_CUR_customer1Marshaller implements BusinessObjectMarshaller
	{
		private static final VersataLogger LOGGER = VersataLogger.getLogger(
			Currency_CUR_customer1Marshaller.class);

		
		
				private static Map childMarshallers = new HashMap();
		/**
		 * Populates the child marshaller list
		 */
		private void populateChildMarshallers(){
		
		}
		
		/* (non-Javadoc)
		 * @see com.versata.tl.vls.service.transfer.BusinessObjectMarshaller#getChildMarshaller(java.lang.String)
		 */
		public BusinessObjectMarshaller getChildMarshaller(String BOName){
			BusinessObjectMarshaller retMarshaller = null;
			if(childMarshallers.get(BOName) == null && childMarshallers.isEmpty()){
				populateChildMarshallers();
			}
			retMarshaller = (BusinessObjectMarshaller) childMarshallers.get(BOName);

			return retMarshaller;
		}
		
		/**
		 * Convert the DataRow (QueryObject) to a SDO Transfer object
		 */
		public void marshal(DataObject dataObject, DataRow dataRow) throws ServerException {
			Currency_CUR_customer1 currency_CUR_customer1 = (Currency_CUR_customer1)dataObject;
			Currency_CUR_customer1Impl currency_CUR_customer1Impl = (Currency_CUR_customer1Impl)dataRow.getBusinessObject();
			
				
		
		
			currency_CUR_customer1.setCUR_Client((java.lang.String)currency_CUR_customer1Impl.getValue("CUR_Client"));			
			
		
			currency_CUR_customer1.setCUR_CurrencyCode((java.lang.String)currency_CUR_customer1Impl.getValue("CUR_CurrencyCode"));			
			
		
			currency_CUR_customer1.setCUR_ExchangeRate((java.math.BigDecimal)currency_CUR_customer1Impl.getValue("CUR_ExchangeRate"));			
			
		
			currency_CUR_customer1.setCUR_NumberOfOrders((Integer)currency_CUR_customer1Impl.getValue("CUR_NumberOfOrders"));			
			
		
			currency_CUR_customer1.setCUR_OrderValueUSD((java.math.BigDecimal)currency_CUR_customer1Impl.getValue("CUR_OrderValueUSD"));			
			
		
			currency_CUR_customer1.setCUR_OrderAmountAverage((java.math.BigDecimal)currency_CUR_customer1Impl.getValue("CUR_OrderAmountAverage"));			
			
		
			currency_CUR_customer1.setCUR_Image((java.lang.String)currency_CUR_customer1Impl.getValue("CUR_Image"));			
			
		
			currency_CUR_customer1.setCUR_Client_RelatedTo((java.lang.String)currency_CUR_customer1Impl.getValue("CUR_Client_RelatedTo"));			
			
		
			currency_CUR_customer1.setCUR_CurrencyCode_RelatedTo((java.lang.String)currency_CUR_customer1Impl.getValue("CUR_CurrencyCode_RelatedTo"));			
			
		
		}
		

		
		/** 
		 * Convert the SDO transfer object to a corresponding Simple DTO (bean).
		 */
		public void marshal(CurrencyDemo.Currency_CUR_customer1 sdo, CurrencyDemo.service.dto.Currency_CUR_customer1DTO dto) {
					
			dto.setCUR_Client(sdo.getCUR_Client());			
				
			dto.setCUR_CurrencyCode(sdo.getCUR_CurrencyCode());			
				
			dto.setCUR_ExchangeRate(sdo.getCUR_ExchangeRate());			
				
			dto.setCUR_NumberOfOrders(sdo.getCUR_NumberOfOrders());			
				
			dto.setCUR_OrderValueUSD(sdo.getCUR_OrderValueUSD());			
				
			dto.setCUR_OrderAmountAverage(sdo.getCUR_OrderAmountAverage());			
				
			dto.setCUR_Image(sdo.getCUR_Image());			
				
			dto.setCUR_Client_RelatedTo(sdo.getCUR_Client_RelatedTo());			
				
			dto.setCUR_CurrencyCode_RelatedTo(sdo.getCUR_CurrencyCode_RelatedTo());			
		
		}
		
		/**
		 * Convert an SDO object back into a Versata object.  Derived fields are not copied
		 */
		public void unmarshal(DataObject dataObject, DataRow dataRow) throws ServerException {
			Currency_CUR_customer1 currency_CUR_customer1 = (Currency_CUR_customer1)dataObject;
			Currency_CUR_customer1Impl currency_CUR_customer1Impl = (Currency_CUR_customer1Impl)dataRow.getBusinessObject();		
		
			currency_CUR_customer1Impl.setValue("CUR_Client", currency_CUR_customer1.getCUR_Client());
			
		
			currency_CUR_customer1Impl.setValue("CUR_CurrencyCode", currency_CUR_customer1.getCUR_CurrencyCode());
			
		
			currency_CUR_customer1Impl.setValue("CUR_ExchangeRate", currency_CUR_customer1.getCUR_ExchangeRate());
			
		
			currency_CUR_customer1Impl.setValue("CUR_NumberOfOrders", currency_CUR_customer1.getCUR_NumberOfOrders());
			
		
			currency_CUR_customer1Impl.setValue("CUR_OrderValueUSD", currency_CUR_customer1.getCUR_OrderValueUSD());
			
		
			currency_CUR_customer1Impl.setValue("CUR_OrderAmountAverage", currency_CUR_customer1.getCUR_OrderAmountAverage());
			
		
			currency_CUR_customer1Impl.setValue("CUR_Image", currency_CUR_customer1.getCUR_Image());
			
		
			currency_CUR_customer1Impl.setValue("CUR_Client_RelatedTo", currency_CUR_customer1.getCUR_Client_RelatedTo());
			
		
			currency_CUR_customer1Impl.setValue("CUR_CurrencyCode_RelatedTo", currency_CUR_customer1.getCUR_CurrencyCode_RelatedTo());
			
		
		}


		/** 
		 * Convert a Simple DTO (bean) to a corresponding SDO transfer object
		 */
		public void unmarshal(CurrencyDemo.Currency_CUR_customer1 sdo, CurrencyDemo.service.dto.Currency_CUR_customer1DTO dto) throws ServerException {
					
			sdo.setCUR_Client(dto.getCUR_Client());			
				
			sdo.setCUR_CurrencyCode(dto.getCUR_CurrencyCode());			
				
			sdo.setCUR_ExchangeRate(dto.getCUR_ExchangeRate());			
				
			sdo.setCUR_NumberOfOrders(dto.getCUR_NumberOfOrders());			
				
			sdo.setCUR_OrderValueUSD(dto.getCUR_OrderValueUSD());			
				
			sdo.setCUR_OrderAmountAverage(dto.getCUR_OrderAmountAverage());			
				
			sdo.setCUR_Image(dto.getCUR_Image());			
				
			sdo.setCUR_Client_RelatedTo(dto.getCUR_Client_RelatedTo());			
				
			sdo.setCUR_CurrencyCode_RelatedTo(dto.getCUR_CurrencyCode_RelatedTo());			
		
		}
		
		public void unmarshal(DataObject dataObject, DataRow dataRow, ChangeSummary changeSummary) throws ServerException {
			Currency_CUR_customer1Impl currency_CUR_customer1Impl = (Currency_CUR_customer1Impl)dataRow.getBusinessObject();

			List changedList = changeSummary.getOldValues(dataObject);

			for (int j = 0; j < changedList.size(); j++) {
				ChangeSummary.Setting setting = (ChangeSummary.Setting)changedList.get(j);
				Property property = setting.getProperty();
				Object newValue = dataObject.get(property);
				currency_CUR_customer1Impl.setValue(property.getName(), newValue);
			}
		}
		
		public void unmarshal(DataObject dataObject, DataRow dataRow, Map changedValues) throws ServerException {
			Currency_CUR_customer1Impl currency_CUR_customer1Impl = (Currency_CUR_customer1Impl)dataRow.getBusinessObject();

			Iterator iterator = changedValues.keySet().iterator();
			
			while(iterator.hasNext()){
				Property attribute = (Property) iterator.next();
				ChangeSetting setting = (ChangeSetting)changedValues.get(attribute);
				Object newValue = setting.getValue();
				currency_CUR_customer1Impl.setValue(attribute.getName(), newValue);
			}
		}
	}
