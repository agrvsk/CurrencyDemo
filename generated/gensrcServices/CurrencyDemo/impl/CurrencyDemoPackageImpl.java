/**
 *  Copyright (c) Versata, Inc., 2000-2004. All Rights Reserved.
 * 
 *  THIS CODE IS AUTOGENERATED BASED ON THE METAMODEL.  PLEASE DO NOT EDIT AS THE
 *  CHANGES WILL BE OVERWRITTEN
 * 
 * 
 *
 * $Id$
 */
package CurrencyDemo.impl;

import CurrencyDemo.Common_COP_QPackage;
import CurrencyDemo.CurrencyDemoFactory;
import CurrencyDemo.CurrencyDemoPackage;
import CurrencyDemo.Currency_CUR_customer1Package;
import CurrencyDemo.Currency_CUR_customerPackage;
import CurrencyDemo.RootObject;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.impl.EPackageImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class CurrencyDemoPackageImpl extends EPackageImpl implements CurrencyDemoPackage
{
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass rootObjectEClass = null;

  /**
   * Creates an instance of the model <b>Package</b>, registered with
   * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
   * package URI value.
   * <p>Note: the correct way to create the package is via the static
   * factory method {@link #init init()}, which also performs
   * initialization of the package, or returns the registered package,
   * if one already exists.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.eclipse.emf.ecore.EPackage.Registry
   * @see CurrencyDemo.CurrencyDemoPackage#eNS_URI
   * @see #init()
   * @generated
   */
  private CurrencyDemoPackageImpl()
  {
    super(eNS_URI, CurrencyDemoFactory.eINSTANCE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static boolean isInited = false;

  /**
   * Creates, registers, and initializes the <b>Package</b> for this
   * model, and for any others upon which it depends.  Simple
   * dependencies are satisfied by calling this method on all
   * dependent packages before doing anything else.  This method drives
   * initialization for interdependent packages directly, in parallel
   * with this package, itself.
   * <p>Of this package and its interdependencies, all packages which
   * have not yet been registered by their URI values are first created
   * and registered.  The packages are then initialized in two steps:
   * meta-model objects for all of the packages are created before any
   * are initialized, since one package's meta-model objects may refer to
   * those of another.
   * <p>Invocation of this method will not affect any packages that have
   * already been initialized.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #eNS_URI
   * @see #createPackageContents()
   * @see #initializePackageContents()
   * @generated
   */
  public static CurrencyDemoPackage init()
  {
    if (isInited) return (CurrencyDemoPackage)EPackage.Registry.INSTANCE.getEPackage(CurrencyDemoPackage.eNS_URI);

    // Obtain or create and register package
    CurrencyDemoPackageImpl theCurrencyDemoPackage = (CurrencyDemoPackageImpl)(EPackage.Registry.INSTANCE.getEPackage(eNS_URI) instanceof CurrencyDemoPackageImpl ? EPackage.Registry.INSTANCE.getEPackage(eNS_URI) : new CurrencyDemoPackageImpl());

    isInited = true;

    // Initialize simple dependencies
    Currency_CUR_customer1Package.eINSTANCE.eClass();
    Currency_CUR_customerPackage.eINSTANCE.eClass();
    Common_COP_QPackage.eINSTANCE.eClass();

    // Create package meta-data objects
    theCurrencyDemoPackage.createPackageContents();

    // Initialize created meta-data
    theCurrencyDemoPackage.initializePackageContents();

    // Mark meta-data to indicate it can't be changed
    theCurrencyDemoPackage.freeze();

    return theCurrencyDemoPackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getRootObject()
  {
    return rootObjectEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getRootObject_Currency_CUR_customer()
  {
    return (EReference)rootObjectEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getRootObject_Common_COP_Q()
  {
    return (EReference)rootObjectEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getRootObject_Currency_CUR_customer1()
  {
    return (EReference)rootObjectEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public CurrencyDemoFactory getCurrencyDemoFactory()
  {
    return (CurrencyDemoFactory)getEFactoryInstance();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isCreated = false;

  /**
   * Creates the meta-model objects for the package.  This method is
   * guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void createPackageContents()
  {
    if (isCreated) return;
    isCreated = true;

    // Create classes and their features
    rootObjectEClass = createEClass(ROOT_OBJECT);
    createEReference(rootObjectEClass, ROOT_OBJECT__CURRENCY_CUR_CUSTOMER);
    createEReference(rootObjectEClass, ROOT_OBJECT__COMMON_COP_Q);
    createEReference(rootObjectEClass, ROOT_OBJECT__CURRENCY_CUR_CUSTOMER1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isInitialized = false;

  /**
   * Complete the initialization of the package and its meta-model.  This
   * method is guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void initializePackageContents()
  {
    if (isInitialized) return;
    isInitialized = true;

    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);

    // Obtain other dependent packages
    Currency_CUR_customerPackage theCurrency_CUR_customerPackage = (Currency_CUR_customerPackage)EPackage.Registry.INSTANCE.getEPackage(Currency_CUR_customerPackage.eNS_URI);
    Common_COP_QPackage theCommon_COP_QPackage = (Common_COP_QPackage)EPackage.Registry.INSTANCE.getEPackage(Common_COP_QPackage.eNS_URI);
    Currency_CUR_customer1Package theCurrency_CUR_customer1Package = (Currency_CUR_customer1Package)EPackage.Registry.INSTANCE.getEPackage(Currency_CUR_customer1Package.eNS_URI);

    // Add supertypes to classes

    // Initialize classes and features; add operations and parameters
    initEClass(rootObjectEClass, RootObject.class, "RootObject", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getRootObject_Currency_CUR_customer(), theCurrency_CUR_customerPackage.getCurrency_CUR_customer(), null, "currency_CUR_customer", null, 0, -1, RootObject.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getRootObject_Common_COP_Q(), theCommon_COP_QPackage.getCommon_COP_Q(), null, "common_COP_Q", null, 0, -1, RootObject.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getRootObject_Currency_CUR_customer1(), theCurrency_CUR_customer1Package.getCurrency_CUR_customer1(), null, "currency_CUR_customer1", null, 0, -1, RootObject.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    // Create resource
    createResource(eNS_URI);
  }

} //CurrencyDemoPackageImpl
