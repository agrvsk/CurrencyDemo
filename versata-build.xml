<project name="versata-build" default="initialize-projects" basedir=".">

	<!-- set global properties for this build -->
	<property file="versata-build.properties" />
	<property name="mockserver.conf" value="mockserver"/>
	<property file="locations.properties" />

	<target name="update-jndi-for-versata-ejbs">
		<echo>target versata-build.update-jndi-for-versata-ejbs</echo>

		<replace dir="${beans.project.dir}/ejbModule/META-INF" token="&lt;jndi-name&gt;" value="&lt;jndi-name&gt;${repos.name}/">
			<include name="**/jboss.xml" />
		</replace>
		<replace dir="${beans.project.dir}/ejbModule/META-INF" token="jndiName=&quot;" value="jndiName=&quot;${repos.name}/">
			<include name="**/ibm-ejb-jar-bnd.xmi" />
		</replace>
		<replace dir="${beans.project.dir}/ejbModule/META-INF" token="&lt;jndi-name&gt;" value="&lt;jndi-name&gt;${repos.name}/">
			<include name="**/weblogic-ejb-jar.xml" />
		</replace>
		<replace dir="${beans.project.dir}/ejbModule/META-INF" token="&lt;jndi-name&gt;" value="&lt;jndi-name&gt;${repos.name}/">
			<include name="**/sun-ejb-jar.xml" />
		</replace>		

		
	    <property name="vdr.dir"
	              value="${project.dir}/../${project.name}-vdr" />
	    <property name="jndi.list"
	              value="DecisionLogicBean" />
		
	    <foreach target="-munge-jboss-or-wls-vdr"
	             list="${jndi.list}"
	             inheritrefs="true"
	             inheritall="true"
	             param="ejb-jndi-name">
	      <param name="dd.file.name"
	             value="jboss.xml" />
	    </foreach>
	    <foreach target="-munge-jboss-or-wls-vdr"
	             list="${jndi.list}"
	             inheritrefs="true"
	             inheritall="true"
	             param="ejb-jndi-name">
	      <param name="dd.file.name"
	             value="weblogic-ejb-jar.xml" />
	    </foreach>
	    <antcall target="-munge-was-vdr" />
		<!-- SJSAS9 specific -->
		<antcall target="-munge-sjsas-vdr" />
		
	  </target>

	<target name="-munge-jboss-or-wls-vdr">
		<echo>target versata-build -munge-jboss-or-wls-vdr</echo>
	    <xmltask source="${vdr.dir}/ejbmodule/META-INF/${dd.file.name}"
	             dest="${vdr.dir}/ejbmodule/META-INF/${dd.file.name}"
	             preservetype="true">
	      <xmlcatalog refid="dtds" />
	      <replace path="//*/local-jndi-name[contains(.,'${ejb-jndi-name}')]/text()"
	               withText="${project.name}/${ejb-jndi-name}" />
	    </xmltask>
	  </target>
	  <!-- This is done with a replace instead of xmltask to handle offline and XMI editing -->
	  <target name="-munge-was-vdr">
		<echo>target versata-build -munge-was-vdr</echo>
	    <replace file="${vdr.dir}/ejbmodule/META-INF/ibm-ejb-jar-bnd.xmi"
	             token="DecisionLogicBean"
	             value="${project.name}/DecisionLogicBean" />
	  </target>
	  
	  <!-- SJSAS9 specific -->
	  <target name="-munge-sjsas-vdr"
				if="appserver.sjsas">

			<replace file="${vdr.dir}/ejbmodule/META-INF/sun-ejb-jar.xml"
						token="DecisionLogicBean"
						value="${project.name}/DecisionLogicBean" />
		</target>
		

	<target name="update-web-dd">
		<echo>target versata-build update-web-dd</echo>
		<copy overwrite="true" todir="${web.project.dir}/WebContent/WEB-INF" file="${studio.home}/properties/web.xml" />
	</target>

	<target name="initialize-projects">
		<echo>target versata-build.initialize-projects</echo>
		<antcall target="update-jndi-for-versata-ejbs" />
		<!--antcall target="update-web-dd"/-->
	</target>

	<target name="copy-libs">
		<echo>target versata-build copy-libs</echo>
		<copy file="${org.eclipse.emf.common.plugin}" todir="${earcontent.dir}" />
		<copy file="${org.eclipse.emf.commonj.sdo.plugin}" todir="${earcontent.dir}" />
		<copy file="${org.eclipse.emf.ecore.plugin}" todir="${earcontent.dir}" />
		<copy file="${org.eclipse.emf.ecore.change.plugin}" todir="${earcontent.dir}" />
		<copy file="${org.eclipse.emf.ecore.sdo.plugin}" todir="${earcontent.dir}" />
		<copy file="${org.eclipse.emf.ecore.xmi.plugin}" todir="${earcontent.dir}" />
		<copy file="${org.eclipse.osgi.plugin}" todir="${earcontent.dir}" />
		<copy file="${org.eclipse.core.runtime.plugin}" todir="${earcontent.dir}" />

		<copy todir="${earcontent.dir}" preservelastmodified="true">
			<fileset dir="${versataRoot}/Config/mydefault.ear">
				<include name="**/*.jar" />
				<exclude name="**/vdr.jar" />
				<exclude name="**/vs-tle-beans-server.jar" />
				
				
			</fileset>

			<fileset dir="${deploy.home}/lib">
				<!--<include name="xstream-1.2.2.jar" />-->
				<include name="xstream-1.4.4.jar" />
				<include name="xmlpull-1.1.3.1.jar" />
				<include name="xpp3_min-1.1.3.4.O.jar" />
				<include name="VLSWebConsole_Web.jar" />
				<include name="consoleVLS-1.0.jar" />				
			</fileset>

			<fileset dir="${runtime.home}/lib">
				<include name="javassist.jar" />
			</fileset>

			<fileset dir="${mockserver.home}/lib">
				<include name="commons-lang-2.6.jar" />
			</fileset>

			<fileset dir="${com.yasutech.qrules.services.plugin}">
				<include name="**/engine.jar" />
				<include name="**/quickrulesinterface20.jar" />
			</fileset>

			<fileset dir="${versataRoot}/Lib/jaxb">
				<include name="**/jax-qname-1.0.1.jar" />
				<include name="**/jaxb-api-1.0.3.jar" />
				<include name="**/jaxb-impl-1.0.2.jar" />
				<include name="**/jaxb-libs-1.0.2.jar" />
				<include name="**/jaxb-xjc-1.0.2.jar" />
				<include name="**/relaxngDatatype-1.0.1.jar" />
				<include name="**/xsdlib-1.0.2.jar" />
				<include name="**/namespace-1.0.2.jar" />
			</fileset>	
			
			<fileset dir="${versataRoot}/Lib/bcel">
				<include name="bcel-5.2.jar" />
			</fileset>
			
			<fileset dir="${versataRoot}/VLS/lib">
				<include name="kryo-1.04.jar" />
			</fileset>

		</copy>

		<copy todir="${project.dir}/properties/" preservelastmodified="true">
			<fileset dir="${versataRoot}/Vls/lib">
				<include name="**/VLSConfig.properties" />
				<include name="**/VersataDeploy.xsd" />
			</fileset>
		</copy>

		<propertyfile file="${project.dir}/properties/VLSConfig.properties">
			<entry key="project.name" value="${project.name}" />
		</propertyfile>

		<echo append="true" file="${project.dir}/properties/VLSConfig.properties">
#Comma-separated list of server applications for which non-alterability check will not be fired
#server.apps=
		</echo>
	
		<mkdir dir="${mockserver.conf}"/>
		<copy todir="${project.dir}/${mockserver.conf}" preservelastmodified="true">
			<fileset dir="${mockserver.home}/conf">
				<include name="**/*.*" />
			</fileset>

			<filterset>
			   <filter token="WEBROOT" value="${webcontent.dir}"/>
			   <filter token="VLSWEBROOT" value="${vlsconsole.webcontent.dir}"/>
			   <filter token="DATASOURCE" value="${project.name}AdminDS"/>
			   <filter token="REPONAME" value="${project.name}"/>
			   <filter token="JSFWEBROOT" value="${jsfwebroot}"/>
				<filter token="VERSATAROOT" value="${versataRoot}"/>
			</filterset>
			
		</copy>
				
		<jar destfile="${earcontent.dir}/vs-tle-config.jar" basedir="${versataRoot}">
			<include name="license.xml" />
			<fileset dir="${versataRoot}/VLSComponents">
				<include name="config_static.bsh" />
				<include name="AppConfig.properties" />
			</fileset>
			<fileset dir="${versataRoot}/VLSComponents/Classes">
				<include name="**/AppConfig.properties" />
			</fileset>
			<fileset dir="${versataRoot}/VLSComponents/bsh">
				<include name="cmdConsole_local.bsh" />
			</fileset>
		</jar>

		<!-- Create the <rep-name>.properties file -->
		<concat destfile="${project.dir}/properties/${project.name}.properties" force="yes" append="no">VLSVersion=</concat>
		<concat destfile="${project.dir}/properties/${project.name}.properties" force="yes" append="yes">
			<filelist dir="${versataRoot}/Vls" files="VLSVersion.txt" />
		</concat>
		<concat destfile="${project.dir}/properties/${project.name}.properties" force="yes" append="yes">
			<filelist dir="${versataRoot}" files="StudioVersion.txt" />
		</concat>

		<copy todir="${earcontent.dir}/META-INF/" preservelastmodified="true">
					<fileset dir="${studio.home}/xml">
						<include name="**/jboss-app.xml" />
						<include name="**/jboss-deployment-structure.xml" />
					</fileset>
					

					<filterset>
					   <filter token="REPONAME" value="${project.name}"/>
					</filterset>					
		</copy>
		<copy todir="${earcontent.dir}" preservelastmodified="true">
			<fileset dir="${studio.home}/properties">
				<include name="DeploymentConfiguration.properties" />
			</fileset>
		</copy>
		<xmltask source="${earcontent.dir}/META-INF/jboss-deployment-structure.xml" 	             dest="${earcontent.dir}/META-INF/jboss-deployment-structure.xml"	             preservetype="true">     
			<replace path="/jboss-deployment-structure/sub-deployment[@name='slx-jsf-webproject.war']/@name" 								withText="${project.name}-jsf-webproject.war" />
		</xmltask>
		<xmltask source="${earcontent.dir}/META-INF/jboss-deployment-structure.xml" 	             dest="${earcontent.dir}/META-INF/jboss-deployment-structure.xml"	             preservetype="true">     
			<replace path="/jboss-deployment-structure/sub-deployment[@name='slxWeb.war']/@name" 								withText="${project.name}Web.war" />
		</xmltask>
		
		<echo file="${earcontent.dir}/META-INF/jboss-classloading.xml">
&lt;classloading xmlns="urn:jboss:classloading:1.0"
	domain="brmsEAR"
	export-all="NON_EMPTY"
	import-all="true"
	parent-first="false"&gt;
&lt;/classloading&gt;
		</echo>
		
		<mkdir dir="${web.project.dir}/conf"/>
		
		<copy file="${project.dir}/properties/${project.name}.properties" todir="${web.project.dir}/conf"/>
		
		
		<antcall target="update-ear-manifest"/>
	</target>

	<target name="update-ear-content">
		<echo>target versata-build update-ear-content</echo>
		<copy todir="${earcontent.dir}">
			<fileset dir="${project.dir}/lib">
				<include name="**/*.jar" />
			</fileset>
		</copy>
	
		<!-- Tillagt 170209 AGR 
		<copy todir="${earcontent.dir}" preservelastmodified="true">
			<fileset dir="${project.dir}/properties">
				<include name="VLSConfig.properties" />
			</fileset>
		</copy>
		 ================== -->

	</target>
	
	<target name="update-ear-manifest">
		<echo>target versata-build update-ear-manifest</echo>
		 <pathconvert property="ear.libs" pathsep=" " >
		 	<mapper>
				<chainedmapper>
					<flattenmapper/>
				</chainedmapper>
			</mapper>
			<path>
				<fileset dir="${earcontent.dir}">
					<include name="**/*.jar"/>
				</fileset >
			</path>
		</pathconvert >

		<manifest file="${earcontent.dir}/META-INF/MANIFEST.MF">
			<attribute name="Class-Path" value="${ear.libs}"/>
		</manifest>
		<manifest file="${GenSrcPath}/META-INF/MANIFEST.MF">
			<attribute name="Class-Path" value="${ear.libs}"/>
		</manifest>
	</target>

	<target name="init">
		<echo>target versata-build init</echo>
		<taskdef resource="net/sf/antcontrib/antlib.xml">
			<classpath>
				<pathelement location="${deploy.home}/lib/ant-contrib.jar" />
			</classpath>
		</taskdef>

		<xmlcatalog id="dtds">
			<dtd publicId="-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN" location="file:///${versataRoot}/dtds/web-app_2_3.dtd" />
			<dtd publicId="-//Sun Microsystems, Inc.//DTD J2EE Application 1.2//EN" location="file:///${versataRoot}/dtds/application_1_2.dtd" />
			<dtd publicId="-//BEA Systems, Inc.//DTD Web Application 8.1//EN" location="file:///${versataRoot}/dtds/weblogic810-web-jar.dtd" />

			<dtd publicId="-//JBoss//DTD JBOSS 3.2//EN" location="file:///${versataRoot}/dtds/jboss_3_2.dtd" />
			<dtd publicId="-//BEA Systems, Inc.//DTD WebLogic 8.1.0 EJB//EN" location="file:///${versataRoot}/dtds/weblogic-ejb-jar.dtd" />

			<!--<dtd publicId="-//BEA Systems, Inc.//DTD Web Application 8.1//EN" location="file:///${versataRoot}/dtds/jboss-app_3_2.dtd" />
			<dtd publicId="-//BEA Systems, Inc.//DTD Web Application 8.1//EN" location="file:///${versataRoot}/dtds/Repository.dtd" />
			<dtd publicId="-//BEA Systems, Inc.//DTD Web Application 8.1//EN" location="file:///${versataRoot}/dtds/sun-application_5_0-0.dtd" />
			<dtd publicId="-//BEA Systems, Inc.//DTD Web Application 8.1//EN" location="file:///${versataRoot}/dtds/sun-ejb-jar_3_0-0.dtd" />
			<dtd publicId="-//BEA Systems, Inc.//DTD Web Application 8.1//EN" location="file:///${versataRoot}/dtds/ejb-jar_2_0.dtd" />-->

		</xmlcatalog>
	</target>

	<target name="modify" depends="init">
		<echo>target versata-build modify</echo>
		<property name="service.wsdd" value="${axis.dir}/WEB-INF/server-config.wsdd" />

		<xmltask dest="${service.wsdd}">
			<insert path="/">
				<![CDATA[
<deployment name="defaultClientConfig"
				placeHolderForXmlNamespace="http://xml.apache.org/axis/wsdd/"
            xmlns:java="http://xml.apache.org/axis/wsdd/providers/java"
            xmlns:handler="http://xml.apache.org/axis/wsdd/providers/handler">
				<globalConfiguration>
					<parameter name="disablePrettyXML" value="true"/>
					<requestFlow>
						<handler type="java:org.apache.axis.handlers.JWSHandler">
							<parameter name="scope" value="session"/>
						</handler>
						<handler type="java:org.apache.axis.handlers.JWSHandler">
							<parameter name="scope" value="request"/>
							<parameter name="extension" value=".jwr"/>
						</handler>
						<!-- uncomment this if you want the SOAP monitor -->
						<handler type="java:org.apache.axis.handlers.SOAPMonitorHandler"/>

					</requestFlow>
					<!-- uncomment this if you want the SOAP monitor -->

					<responseFlow>
						<handler type="java:org.apache.axis.handlers.SOAPMonitorHandler"/>
					</responseFlow>

				</globalConfiguration>

				<handler type="java:org.apache.axis.handlers.http.URLMapper" name="URLMapper"/>
				<handler type="java:org.apache.axis.transport.local.LocalResponder" name="LocalResponder"/>
				<handler type="java:org.apache.axis.handlers.SimpleAuthenticationHandler" name="Authenticate"/>

				<service name="AdminService" provider="java:MSG">
					<namespace>http://xml.apache.org/axis/wsdd/</namespace>
					<parameter name="allowedMethods" value="AdminService"/>
					<parameter name="enableRemoteAdmin" value="false"/>
					<parameter name="className" value="org.apache.axis.utils.Admin"/>
				</service>

				<service name="Version" provider="java:RPC">
					<parameter name="allowedMethods" value="getVersion"/>
					<parameter name="className" value="org.apache.axis.Version"/>
				</service>

				<transport name="http">
					<parameter name="qs:list" 
               value="org.apache.axis.transport.http.QSListHandler"/>
					<parameter name="qs:method" 
               value="org.apache.axis.transport.http.QSMethodHandler"/>
					<parameter name="qs:wsdl" 
               value="org.apache.axis.transport.http.QSWSDLHandler"/>
					<requestFlow>
						<handler type="URLMapper"/>
						<handler type="java:org.apache.axis.handlers.http.HTTPAuthHandler"/>
					</requestFlow>
				</transport>

				<transport name="local">
					<responseFlow>
						<handler type="LocalResponder"/>
					</responseFlow>
				</transport>
			</deployment>
                ]]>
			</insert>
	</xmltask>
	<mkdir dir="${project.dir}/${GenSrcServicesPath}/${ServiceWSDDPath}" />
	<foreach target="-add-service-wsdd" param="wsdd-file" inheritall="true">
		<path>
			<fileset dir="${project.dir}/${GenSrcServicesPath}/${ServiceWSDDPath}" includes="*.wsdd" />
		</path>
	</foreach>

	<!-- Replacing the placeholder with the actual value -->
	<!-- This is a round about way of the problem with XMLTask, which does not work properly with the xmlns attribute -->
	<replace file="${service.wsdd}" token="placeHolderForXmlNamespace" value="xmlns" />

	<propertyfile file="build.properties" comment="Generated properties file.">
		<entry key="update.wsdd" value="false" />
	</propertyfile>
</target>


<target name="-add-service-wsdd">
	<echo>target versata-build -add-service-wsdd</echo>
	<xmltask source="${service.wsdd}" dest="${service.wsdd}">
		<insert path="/deployment/transport[last()]" position="after" file="${wsdd-file}" />
	</xmltask>
</target>

</project>
